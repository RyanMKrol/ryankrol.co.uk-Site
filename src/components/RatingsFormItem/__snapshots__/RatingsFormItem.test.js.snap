// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders CustomError 1`] = `
<CustomError>
  <div
    className="validationError"
  >
    <p>
      Test
    </p>
  </div>
</CustomError>
`;

exports[`renders RatingsFormItem password field 1`] = `
<Formik>
  <Form>
    <form
      action="#"
      onReset={[Function]}
      onSubmit={[Function]}
    >
      <RatingsFormItem
        currentValue="test-password-input-currentValue"
        fieldName="test-password-input-fieldName"
        fieldTitle="test-password-input-fieldTitle"
        fieldType="password"
      >
        <div
          className="formItem highlighted"
          key="test-password-input-fieldName"
        >
          test-password-input-fieldTitle
          <br />
          <Field
            autoComplete="current-password"
            name="test-password-input-fieldName"
            type="password"
          >
            <input
              autoComplete="current-password"
              name="test-password-input-fieldName"
              onBlur={[Function]}
              onChange={[Function]}
              type="password"
            />
          </Field>
          <FormikConnect(ErrorMessageImpl)
            component={[Function]}
            name="test-password-input-fieldName"
          >
            <ErrorMessageImpl
              component={[Function]}
              formik={
                Object {
                  "dirty": false,
                  "errors": Object {},
                  "getFieldHelpers": [Function],
                  "getFieldMeta": [Function],
                  "getFieldProps": [Function],
                  "handleBlur": [Function],
                  "handleChange": [Function],
                  "handleReset": [Function],
                  "handleSubmit": [Function],
                  "initialErrors": Object {},
                  "initialStatus": undefined,
                  "initialTouched": Object {},
                  "initialValues": undefined,
                  "isSubmitting": false,
                  "isValid": true,
                  "isValidating": false,
                  "registerField": [Function],
                  "resetForm": [Function],
                  "setErrors": [Function],
                  "setFieldError": [Function],
                  "setFieldTouched": [Function],
                  "setFieldValue": [Function],
                  "setFormikState": [Function],
                  "setStatus": [Function],
                  "setSubmitting": [Function],
                  "setTouched": [Function],
                  "setValues": [Function],
                  "status": undefined,
                  "submitCount": 0,
                  "submitForm": [Function],
                  "touched": Object {},
                  "unregisterField": [Function],
                  "validateField": [Function],
                  "validateForm": [Function],
                  "validateOnBlur": true,
                  "validateOnChange": true,
                  "validateOnMount": false,
                  "values": undefined,
                }
              }
              name="test-password-input-fieldName"
            />
          </FormikConnect(ErrorMessageImpl)>
        </div>
      </RatingsFormItem>
    </form>
  </Form>
</Formik>
`;

exports[`renders RatingsFormItem range field 1`] = `
<Formik>
  <Form>
    <form
      action="#"
      onReset={[Function]}
      onSubmit={[Function]}
    >
      <RatingsFormItem
        currentValue={50}
        fieldName="test-range-input-fieldName"
        fieldTitle="test-range-input-fieldTitle"
        fieldType="range"
      >
        <div
          className="formItem highlighted"
          key="test-range-input-fieldName"
        >
          test-range-input-fieldTitle - 50
          <br />
          <Field
            max="100"
            min="0"
            name="test-range-input-fieldName"
            type="range"
          >
            <input
              max="100"
              min="0"
              name="test-range-input-fieldName"
              onBlur={[Function]}
              onChange={[Function]}
              type="range"
            />
          </Field>
          <FormikConnect(ErrorMessageImpl)
            component={[Function]}
            name="test-range-input-fieldName"
          >
            <ErrorMessageImpl
              component={[Function]}
              formik={
                Object {
                  "dirty": false,
                  "errors": Object {},
                  "getFieldHelpers": [Function],
                  "getFieldMeta": [Function],
                  "getFieldProps": [Function],
                  "handleBlur": [Function],
                  "handleChange": [Function],
                  "handleReset": [Function],
                  "handleSubmit": [Function],
                  "initialErrors": Object {},
                  "initialStatus": undefined,
                  "initialTouched": Object {},
                  "initialValues": undefined,
                  "isSubmitting": false,
                  "isValid": true,
                  "isValidating": false,
                  "registerField": [Function],
                  "resetForm": [Function],
                  "setErrors": [Function],
                  "setFieldError": [Function],
                  "setFieldTouched": [Function],
                  "setFieldValue": [Function],
                  "setFormikState": [Function],
                  "setStatus": [Function],
                  "setSubmitting": [Function],
                  "setTouched": [Function],
                  "setValues": [Function],
                  "status": undefined,
                  "submitCount": 0,
                  "submitForm": [Function],
                  "touched": Object {},
                  "unregisterField": [Function],
                  "validateField": [Function],
                  "validateForm": [Function],
                  "validateOnBlur": true,
                  "validateOnChange": true,
                  "validateOnMount": false,
                  "values": undefined,
                }
              }
              name="test-range-input-fieldName"
            />
          </FormikConnect(ErrorMessageImpl)>
        </div>
      </RatingsFormItem>
    </form>
  </Form>
</Formik>
`;

exports[`renders RatingsFormItem text field 1`] = `
<Formik>
  <Form>
    <form
      action="#"
      onReset={[Function]}
      onSubmit={[Function]}
    >
      <RatingsFormItem
        currentValue="test-text-input-currentValue"
        fieldName="test-text-input-fieldName"
        fieldTitle="test-text-input-fieldTitle"
        fieldType="text"
      >
        <div
          className="formItem highlighted"
          key="test-text-input-fieldName"
        >
          test-text-input-fieldTitle
          <br />
          <Field
            autoComplete="off"
            name="test-text-input-fieldName"
            type="text"
          >
            <input
              autoComplete="off"
              name="test-text-input-fieldName"
              onBlur={[Function]}
              onChange={[Function]}
              type="text"
            />
          </Field>
          <FormikConnect(ErrorMessageImpl)
            component={[Function]}
            name="test-text-input-fieldName"
          >
            <ErrorMessageImpl
              component={[Function]}
              formik={
                Object {
                  "dirty": false,
                  "errors": Object {},
                  "getFieldHelpers": [Function],
                  "getFieldMeta": [Function],
                  "getFieldProps": [Function],
                  "handleBlur": [Function],
                  "handleChange": [Function],
                  "handleReset": [Function],
                  "handleSubmit": [Function],
                  "initialErrors": Object {},
                  "initialStatus": undefined,
                  "initialTouched": Object {},
                  "initialValues": undefined,
                  "isSubmitting": false,
                  "isValid": true,
                  "isValidating": false,
                  "registerField": [Function],
                  "resetForm": [Function],
                  "setErrors": [Function],
                  "setFieldError": [Function],
                  "setFieldTouched": [Function],
                  "setFieldValue": [Function],
                  "setFormikState": [Function],
                  "setStatus": [Function],
                  "setSubmitting": [Function],
                  "setTouched": [Function],
                  "setValues": [Function],
                  "status": undefined,
                  "submitCount": 0,
                  "submitForm": [Function],
                  "touched": Object {},
                  "unregisterField": [Function],
                  "validateField": [Function],
                  "validateForm": [Function],
                  "validateOnBlur": true,
                  "validateOnChange": true,
                  "validateOnMount": false,
                  "values": undefined,
                }
              }
              name="test-text-input-fieldName"
            />
          </FormikConnect(ErrorMessageImpl)>
        </div>
      </RatingsFormItem>
    </form>
  </Form>
</Formik>
`;
